##Play a round of Euchre
##Import modules necessary for the game
import random
import curses

##Set up decks
import random
from math import trunc

CLUBS = "\u2663"
SPADES = "\u2660"
HEARTS = "\u2665"
DIAMONDS = "\u2666"
PASS = "Pass"
## full deck
DECK = [f"{CLUBS}A", f"{CLUBS}K", f"{CLUBS}Q", f"{CLUBS}J", f"{CLUBS}10", f"{CLUBS}9", f"{SPADES}A", f"{SPADES}K", f"{SPADES}Q", f"{SPADES}J", f"{SPADES}10", f"{SPADES}9", f"{HEARTS}A", f"{HEARTS}K", f"{HEARTS}Q", f"{HEARTS}J", f"{HEARTS}10", f"{HEARTS}9", f"{DIAMONDS}A", f"{DIAMONDS}K", f"{DIAMONDS}Q", f"{DIAMONDS}J", f"{DIAMONDS}10", f"{DIAMONDS}9"]
## list of aces
DECK_ACE = [f"{CLUBS}A", f"{SPADES}A", f"{HEARTS}A", f"{DIAMONDS}A"]
## list of kings
DECK_KING = [f"{CLUBS}K", f"{SPADES}K", f"{HEARTS}K", f"{DIAMONDS}K"]
## list of queens
DECK_QUEEN = [f"{CLUBS}Q", f"{SPADES}Q", f"{HEARTS}Q", f"{DIAMONDS}Q"]
## list of jacks
DECK_JACK = [f"{CLUBS}J", f"{SPADES}J", f"{HEARTS}J", f"{DIAMONDS}J"]
## list of tens
DECK_TEN = [f"{CLUBS}10", f"{SPADES}10", f"{HEARTS}10", f"{DIAMONDS}10"]
## list of nines
DECK_NINE = [f"{CLUBS}9", f"{SPADES}9", f"{HEARTS}9", f"{DIAMONDS}9"]
## list of clubs
DECK_CLUBS = [f"{CLUBS}A", f"{CLUBS}K", f"{CLUBS}Q", f"{CLUBS}J", f"{CLUBS}10", f"{CLUBS}9"]
## list of spades
DECK_SPADES = [f"{SPADES}A", f"{SPADES}K", f"{SPADES}Q", f"{SPADES}J", f"{SPADES}10", f"{SPADES}9"]
## list of hearts
DECK_HEARTS = [f"{HEARTS}A", f"{HEARTS}K", f"{HEARTS}Q", f"{HEARTS}J", f"{HEARTS}10", f"{HEARTS}9"]
## list of diamonds
DECK_DIAMONDS = [f"{DIAMONDS}A", f"{DIAMONDS}K", f"{DIAMONDS}Q", f"{DIAMONDS}J", f"{DIAMONDS}10", f"{DIAMONDS}9"]
## order of trump when clubs is trump
DECK_CLUBS_TRUMP = [f"{CLUBS}J", f"{SPADES}J", f"{CLUBS}A", f"{CLUBS}K", f"{CLUBS}Q", f"{CLUBS}10", f"{CLUBS}9"]
## order of trump when spades is trump
DECK_SPADES_TRUMP = [f"{SPADES}J", f"{CLUBS}J", f"{SPADES}A", f"{SPADES}K", f"{SPADES}Q", f"{SPADES}10", f"{SPADES}9"]
## order of trump when hearts is trump
DECK_HEARTS_TRUMP = [f"{HEARTS}J", f"{DIAMONDS}J", f"{HEARTS}A", f"{HEARTS}K", f"{HEARTS}Q", f"{HEARTS}10", f"{HEARTS}9"]
## order of trump when diamonds is trump
DECK_DIAMONDS_TRUMP = [f"{DIAMONDS}J", f"{HEARTS}J", f"{DIAMONDS}A", f"{DIAMONDS}K", f"{DIAMONDS}Q", f"{DIAMONDS}10", f"{DIAMONDS}9"]
## list of clubs when spades is trump (no jack)
DECK_CLUBS_SPADES_TRUMP = [f"{CLUBS}A", f"{CLUBS}K", f"{CLUBS}Q", f"{CLUBS}10", f"{CLUBS}9"]
## list of spades when clubs is trump (no jack)
DECK_SPADES_CLUBS_TRUMP = [f"{SPADES}A", f"{SPADES}K", f"{SPADES}Q", f"{SPADES}10", f"{SPADES}9"]
## list of hearts when diamonds is trump (no jack)
DECK_HEARTS_DIAMONDS_TRUMP = [f"{HEARTS}A", f"{HEARTS}K", f"{HEARTS}Q", f"{HEARTS}10", f"{HEARTS}9"]
## list of diamonds when hearts is trump (no jack)
DECK_DIAMONDS_HEARTS_TRUMP = [f"{DIAMONDS}K", f"{DIAMONDS}Q", f"{DIAMONDS}10", f"{DIAMONDS}9"]

## Set up shuffled deck
shuffled_deck = list(DECK)
random.shuffle(shuffled_deck)

player = shuffled_deck[:5]
cpu1 = shuffled_deck[5:10]
cpu2 = shuffled_deck[10:15]
cpu3 = shuffled_deck[15:20]
kitty = shuffled_deck[20:]
laid_cards = []

## Intial turn and deal order
turn_order = ["player", "cpu1", "cpu2", "cpu3"]
deal_order = ["player", "comp1", "comp2", "comp3"]

##Used to update the turn and deal counters
def change_turn():
    turn_order.insert(3, turn_order.pop(0))
def change_deal():
    deal_order.insert(3, deal_order.pop(0))

##Checks what suit a card is
def suit(card):
    ##If card is in Clubs
    if card in DECK_CLUBS:
        return CLUBS
    ##If card is in Spades
    elif card in DECK_SPADES:
        return SPADES
    ##If card is in Hearts
    elif card in DECK_HEARTS:
        return HEARTS
    ##If card it in Diamonds
    else:
        return DIAMONDS

##Allows the player to choose trump on the first round
def player_choose_trump_first_round():
    choice = input(f"Would you like {kitty[0]} to be trump? ")
    if choice.lower() == "yes":
        return True
    elif choice.lower() == "no":
        return False
    else:
        player_choose_trump_first_round()

## bot decide trump first round
def bot_choose_trump_first_round(hand):
    trump = suit(kitty[0])
    if trump == CLUBS:
        if DECK_CLUBS_TRUMP[0] in hand or DECK_CLUBS_TRUMP[1] in hand:
            counter = 0
            index = 0
            while index < 5:
                if DECK_CLUBS_TRUMP[index] in hand:
                    counter = counter + 1
                index = index + 1
            if counter >= 2:
                return True
            else:
                return False
        else:
            return False
    elif trump == SPADES:
        if DECK_SPADES_TRUMP[0] in hand or DECK_SPADES_TRUMP[1] in hand:
            counter = 0
            index = 0
            while index < 5:
                if DECK_SPADES_TRUMP[index] in hand:
                    counter = counter + 1
                index = index + 1
            if counter >= 2:
                return True
            else:
                return False
        else:
            return False
    elif trump == HEARTS:
        if DECK_HEARTS_TRUMP[0] in hand or DECK_HEARTS_TRUMP[1] in hand:
            counter = 0
            index = 0
            while index < 5:
                if DECK_HEARTS_TRUMP[index] in hand:
                    counter = counter + 1
                index = index + 1
            if counter >= 2:
                return True
            else:
                return False
        else:
            return False
    else:
        if DECK_DIAMONDS_TRUMP[0] in hand or DECK_DIAMONDS_TRUMP[1] in hand:
            counter = 0
            index = 0
            while index < 5:
                if DECK_DIAMONDS_TRUMP[index] in hand:
                    counter = counter + 1
                index = index + 1
            if counter >= 2:
                return True
            else:
                return False
        else:
            return False

def player_choose_trump_second_round():
    choice = input(f"What suit would you like trump to be? (You may not choose {suit(kitty[0])}) ")

    if choice.lower() == "clubs":
        if suit(kitty[0]) != CLUBS:
            return CLUBS
    elif choice.lower() == "spades":
        if suit(kitty[0]) != SPADES:
            return SPADES
    elif choice.lower() == "hearts":
        if suit(kitty[0]) != HEARTS:
            return HEARTS
    elif choice.lower() == "diamonds":
        if suit(kitty[0]) != DIAMONDS:
            return DIAMONDS
    elif choice.lower() == "pass":
        return PASS
    return player_choose_trump_second_round()

## bot decide trump second round
def bot_choose_trump_second_round(hand):
    not_trump = suit(kitty[0])
    trump = ""
    if DECK_CLUBS_TRUMP[0] in hand:
        counter = 0
        index = 1
        while index < 7:
            if DECK_CLUBS_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = CLUBS
    elif DECK_CLUBS_TRUMP[1] in hand:
        counter = 0
        index = 2
        while index < 7:
            if DECK_CLUBS_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = CLUBS
    if DECK_SPADES_TRUMP[0] in hand:
        counter = 0
        index = 1
        while index < 7:
            if DECK_SPADES_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = SPADES
    elif DECK_SPADES_TRUMP[1] in hand:
        counter = 0
        index = 2
        while index < 7:
            if DECK_SPADES_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = SPADES
    if DECK_HEARTS_TRUMP[0] in hand:
        counter = 0
        index = 1
        while index < 7:
            if DECK_HEARTS_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = HEARTS
    elif DECK_HEARTS_TRUMP[1] in hand:
        counter = 0
        index = 2
        while index < 7:
            if DECK_HEARTS_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = HEARTS
    if DECK_DIAMONDS_TRUMP[0] in hand:
        counter = 0
        index = 2
        while index < 7:
            if DECK_DIAMONDS_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = DIAMONDS
    elif DECK_DIAMONDS_TRUMP[1] in hand:
        counter = 0
        index = 2
        while index < 7:
            if DECK_DIAMONDS_TRUMP[index] in hand:
                counter = counter + 1
            index = index + 1
        if counter >= 2:
            trump = DIAMONDS
    if trump != not_trump and trump != "":
        return trump
    else:
        return False



def choose_trump_second():
    trump = ""
    exit = False
    while exit == False:
        if turn_order[0] == "player":
            player_choice = player_choose_trump_second_round()
            if player_choice == CLUBS:
                trump = CLUBS
                exit = True
            elif player_choice == SPADES:
                trump = SPADES
                exit = True
            elif player_choice == HEARTS:
                trump = HEARTS
                exit = True
            elif player_choice == DIAMONDS:
                trump = DIAMONDS
                exit = True
            else:
                change_turn()
        elif turn_order[0] == "cpu1":
            if bot_choose_trump_second_round(cpu1) == CLUBS:
                trump = CLUBS
                exit = True
            if bot_choose_trump_second_round(cpu1) == SPADES:
                trump = SPADES
                exit = True
            if bot_choose_trump_second_round(cpu1) == HEARTS:
                trump = HEARTS
                exit = True
            if bot_choose_trump_second_round(cpu1) == DIAMONDS:
                trump = DIAMONDS
                exit = True
            else:
                change_turn()
        elif turn_order[0] == "cpu2":
            if bot_choose_trump_second_round(cpu2) == CLUBS:
                trump = CLUBS
                exit = True
            if bot_choose_trump_second_round(cpu2) == SPADES:
                trump = SPADES
                exit = True
            if bot_choose_trump_second_round(cpu2) == HEARTS:
                trump = HEARTS
                exit = True
            if bot_choose_trump_second_round(cpu2) == DIAMONDS:
                trump = DIAMONDS
                exit = True
            else:
                change_turn()
        else:
            if bot_choose_trump_second_round(cpu3) == CLUBS:
                trump = CLUBS
                exit = True
            if bot_choose_trump_second_round(cpu3) == SPADES:
                trump = SPADES
                exit = True
            if bot_choose_trump_second_round(cpu3) == HEARTS:
                trump = HEARTS
                exit = True
            if bot_choose_trump_second_round(cpu3) == DIAMONDS:
                trump = DIAMONDS
                exit = True
            else:
                change_turn()
    print(f"Trump is {trump}")
    return trump


def choose_trump_first():
    index = 0
    exit = False
    while exit == False and index < 4:
        if turn_order[0] == "player":
             if not player_choose_trump_first_round():
                print("You passed.")
                change_turn()
                index = index + 1
             else:
                print(f"You chose {suit(kitty[0])} as trump.")
                exit = True
                index = index + 1
        elif turn_order[0] == "cpu1":
             if bot_choose_trump_first_round(cpu1):
                print(f"Computer 1 has chosen {suit(kitty[0])} as trump.")
                exit = True
                index = index + 1
             else:
                print(f"Computer 1 has passed.")
                change_turn()
                index = index + 1
        elif turn_order[0] == "cpu2":
            if bot_choose_trump_first_round(cpu2):
                print(f"Computer 2 has chosen {suit(kitty[0])} as trump.")
                exit = True
                index = index + 1
            else:
                print(f"Computer 2 has passed.")
                change_turn()
                index = index + 1
        else:
             if bot_choose_trump_first_round(cpu3):
                print(f"Computer 3 has chosen {suit(kitty[0])} as trump.")
                exit = True
                index = index + 1
             else:
                print(f"Computer 3 has passed.")
                change_turn()
                index = index + 1
    return suit(kitty[0])





##Allows the player to choose trump on the second round
def player_choose_trump_2():
    choice = input(f"What suit would you like trump to be? (You may not choose {suit(kitty[0])})")
    
    if choice.lower() == "clubs":
        if suit(kitty[0]) != CLUBS: 
            return CLUBS
        else:
            player_choose_trump_2()
    elif choice.lower() == "spades":
        return SPADES
    elif choice.lower() == "hearts":
        return HEARTS
    elif choice.lower() == "diamonds":
        return DIAMONDS
    else:
        player_choose_trump_2()
print(player_choose_trump_2())

\


